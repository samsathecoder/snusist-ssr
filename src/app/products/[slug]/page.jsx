import { createProductSlug } from '@/lib/slugify';
import { products } from '../../data/products';
import ProductClient from './ProductClient';
import slugify from 'slugify';
// Static parametreler oluÅŸturuluyor
export async function generateStaticParams() {
  return products.map((product) => ({
    slug: createProductSlug(product),
  }));
}
// Metadata fonksiyonu, SEO ve sosyal medya bilgilerini ayarlamak iÃ§in
export async function generateMetadata({ params  }) {
  const slug = params.slug; 
   const product = products.find(
    (p) => createProductSlug(p) === slug
  );

  if (!product) {
    return {
      title: 'ÃœrÃ¼n bulunamadÄ± - Snus Ä°stanbul',
      description: 'AradÄ±ÄŸÄ±nÄ±z Ã¼rÃ¼n bulunamadÄ±.',
    };
  }
  const safeProductName = slugify(product.name);

  return {
    title: `${product.name} - Snus Ä°stanbul`,
    description: `${product.name} hakkÄ±nda detaylÄ± bilgi ve en iyi fiyat Snusist.com'da. Ä°stanbul iÃ§i aynÄ± gÃ¼n teslimat ve gÃ¼venli Ã¶deme seÃ§enekleriyle.`,
    openGraph: {
      title: `${product.name} - Snus Ä°stanbul`,
      description: `${product.name} Ã¼rÃ¼nÃ¼nÃ¼ ÅŸimdi keÅŸfedin. Ä°stanbul'da aynÄ± gÃ¼n teslimat avantajÄ±yla sipariÅŸ verin.`,
    images: [`/images/${safeProductName}-image.webp`],
    },
    twitter: {
      card: 'summary_large_image',
      title: `${product.name} - Snus Ä°stanbul`,
      description: `Snus Ä°stanbul'da ${product.name} iÃ§in en iyi fiyat ve hÄ±zlÄ± teslimat.`,
    images: [`/images/${safeProductName}-image.webp`],
    },
    alternates: {
      canonical: `https://snusist.com/products/${createProductSlug(product)}`, // ğŸ‘ˆ Burada canonical doÄŸru ayarlanÄ±yor
    },

  };
}

// Sayfa fonksiyonu, Ã¼rÃ¼n bilgilerini gÃ¶stermek iÃ§in
export default async function Page({ params }) {
  const product = products.find(
    (p) => createProductSlug(p) === params.slug
  );

  if (!product) {
    return <div>ÃœrÃ¼n bulunamadÄ±.</div>; // EÄŸer Ã¼rÃ¼n bulunmazsa bir mesaj gÃ¶steriyoruz
  }

  // generateMetadata tarafÄ±ndan dÃ¶nen SEO bilgilerini al
  const metadata = {
    slug: `${product.id}-${product.name.toLowerCase().replace(/\s+/g, '-')}`,
  };

  return <ProductClient product={product} metadata={metadata} />;
}
